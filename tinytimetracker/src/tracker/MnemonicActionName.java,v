head	1.2;
access;
symbols;
locks
	gyoung:1.2; strict;
comment	@# @;


1.2
date	2007.10.22.16.15.47;	author rblack;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.19.22.36.37;	author afuqua;	state Exp;
branches;
next	;


desc
@@


1.2
log
@unsupported mnemonic character error message was being printed at the wrong time
@
text
@package tracker;

public class MnemonicActionName {
    final String actionMessage;
    final Integer actionMnemonic;
    
    public MnemonicActionName(String key) {
        String value = Messages.getString(key);
        
        int index = value.indexOf('&');
        // If there is no '&', index will be -1 and we'll just 
        // use the first character.
        actionMnemonic = new Integer( Character.toUpperCase( value.charAt(index+1) ) );
        if (!((actionMnemonic >= 'A' && actionMnemonic <= 'Z' )
            || actionMnemonic > '0' && actionMnemonic <= '9' ))
        {
            // just give a warning that the desired mnemonic will likely not be used
            System.err.println("Unsupported mnemonic character: " + actionMnemonic);
        } 

        actionMessage = value.replaceFirst("&", "");
    }
}
@


1.1
log
@added support for mnemonic character for View, Open and eXit.
@
text
@d14 3
a16 3
        if ((actionMnemonic >= 'A' && actionMnemonic <= 'Z' )
            || actionMnemonic > '0' && actionMnemonic <= '9' )
        { 
@

