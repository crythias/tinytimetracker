head	1.2;
access;
symbols;
locks
	gyoung:1.2; strict;
comment	@# @;


1.2
date	2007.06.13.04.07.11;	author rblack;	state dead;
branches;
next	1.1;

1.1
date	2007.06.11.14.18.58;	author afuqua;	state Exp;
branches;
next	;


desc
@@


1.2
log
@removed placeholder class, using Preferences.node instead
@
text
@package tracker.test;

/**
 * To keep the tests from messing with my real Tiny Time Tracker preferences,
 * I need a class in a new package just to have a unique moniker to hand to
 * Preferences#userNodeForPackage. So, that's all this class is for, it to
 * have a class in a package other than the 'tracker' package.
 * 
 * A note about the placement of the unit test classes: We want the UTs to 
 * have package level access to the classes they are testing, so we don't
 * want to put the UTs in this 'tracker.test' package. Some people put the
 * UTs in a parallel folder structure with the same package names for better
 * separation and easier packaging (jar-ing). We could do that, but for now,
 * it seems managable all in one folder structure.
 */
public class PlaceHolder {
}
@


1.1
log
@OOPS! my test was blowing away my preferences. I fixed that.
I also added an excludes to the build.xml to keep the test code out of the jar.
@
text
@@

